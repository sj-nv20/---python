#Python for Beginner 제3장_02

#print() 함수의 서식


print("안녕하세요") #안녕하세요

print("100")        #문자 100 - " "안 내용은 무조건 문자로 취급
print("%d" % 100)   #숫자 100

print("100+100")            #문자 100 + 100
print("%d" % (100+100))     #숫자 200

# 서식은 앞에 %가 붙음
# %d => 정수를 의미함
# 서식의 개수 == 따옴표 뒤에 나오는 숫자의 개수
#중간의 %는 왼쪽 서식과 오른쪽 값을 구분해주는 역할
#오른쪽 값이 여러개일 경우 , 로 구분해 ()감싸기

print("%d" % (100,200))     #오류
print("%d %d" % 100)        #오류

print("%d %d" % (100, 200)) #100 200

#======================================================================

#print()함수를 사용한 다양한 출력


print("%d / %d = %d" % (100, 200, 0.5))     # 100 / 200 = 0
#0.5가 아닌 0이 출력된 이유는 0.5는 실수인데 정수형(%d)를 사용했기 때문

#서식의 종류
# %d, %x, %o = 10, 100, 1234 = 정수(10진수,16진수,8진수)
# %f = 0.5, 1.0, 3.14 = 실수(소수점이 붙은 수)
# %c = "b", "한" = 한 글자
# %s = "안녕", "abcdefg", "a" = 두글자 이상인 문자열

#======================================================================

#print()함수를 사용한 깔끔한 출력


# 지저분
print("%d / %d = %f" % (100, 200, 0.5)) # 100 / 200 = 0.500000
# 깔끔
print("%d / %d = %5.1f" % (100, 200, 0.5)) # 100 / 200 = 0.5

print("%d" % 123)       #123        숫자 자릿수만큼 정렬
print("%5d" % 123)      #  123      5자리 확보 후 오른쪽에 붙여서 정렬
print("%05d" % 123)     #00123      오른쪽에 붙여서 정렬 + 빈칸0으로 채움

                                           #%7.1f의 경우 .을 포함하고 총 7자리숫자가 출력되어야함
print("%f" % 123.45)        #123.45000      소수점 아래 6자리까지 무조건 출력
print("%7.1f" % 123.45)     #  123.5        소수점 아래 첫째 자리만 출력 + 소수점 아래 둘째 자리에서 반올림
print("%7.3f" % 123.45)     #123.450        소수점 아래 셋째 자리까지 출력 + 오른쪽 빈칸은 0으로 채움       

print("%s" % "Python")      #Python         자릿수만큼 출력
print("%10s" % "Python")    #    Python     10자리 확보 후 오른쪽 정렬

#Python은 format()함수와 {}를 함께 사용해 서식을 지정할 수 있음
print("%d %5d %05d" % (123, 123, 123))      # 123|  123|00123
print("{0:d} {1:5d} {2:05d}".format(123,123,123))   # 123|  123|00123

# {a:b} a는 format()안의 값 중에서 a번째에 대응한다는 의미 
# {a:b} b는 %를 떼고 서식넣기

# .format()을 사용하면 출력순서 지정 가능
print("{2:d} {1:d} {0:d}".format(100, 200, 300))    #300 200 100

#=============================================================================================

# 이스케이프 문자(서식문자)


#print()문은 내용을 출력한 후 한행을 넘긴다
#강제로 한행을 넘기고 싶을 경우 '\n'을 사용
print("안녕하세요. 반갑습니다")         #안녕하세요 반갑습니다
print("안녕하세요. \n반갑습니다")       #안녕하세요
                                      #반갑습니다

#이스케이프 문자 == 서식 문자
#\n     새로운 줄로 이동
#\t     다음탭으로 이동
#\b     뒤로 한칸 이동
#\\     \ 출력
#\'     ' 출력
#\"     " 출력